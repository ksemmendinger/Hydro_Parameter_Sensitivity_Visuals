library(fmsb)
install.packages("wesanderson")
library(dplyr)
library(hydroGOF)
library(dplyr, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(ggplot2, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(ggpubr)
library(wesanderson)
library(jpeg, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(png, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(lattice, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(tools, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(devtools, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(RColorBrewer, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
}
} else {
library(lattice)
portrait_plot <- function(SI, SI_name) {
library(lattice)
library(tools)
library(RColorBrewer)
for (k in 1:length(SI)) {
# subset sensitivty analysis results
with_conf <- SI[[k]]
# if ols then the length of the list is 2 with a different format than the Sobol/Delta analyses
if (SI_name == "ols") {
value <- as.matrix(with_conf)
# write and save portrait plot
col <- colorRampPalette(brewer.pal(9, "PuBuGn"))
png(filename = paste0("output/plots/portrait/", SI_name, "/ols.png"), width = 17, height = 11, units = 'in', res = 1000)
print(levelplot(value, xlab = "Parameter", ylab = "Objective Function", col.regions = col,
main = paste0("Portrait Plot for OLS Sensitivity Analysis")))
dev.off()
# print(levelplot(value, xlab = "Parameter", ylab = "Objective Function", col.regions = col,
#                 main = paste0("Portrait Plot for OLS Sensitivity Analysis")))
#
} else {
value <- as.matrix(with_conf[, , 1])
# write and save portrait plot
col <- colorRampPalette(brewer.pal(9, "PuBuGn"))
png(filename = paste0("output/plots/portrait/", SI_name, "/", dimnames(with_conf)[[3]][1], ".png"), width = 17, height = 11, units = 'in', res = 1000)
print(levelplot(value, xlab = "Parameter", ylab = "Objective Function", col.regions = col,
main = paste0("Portrait Plot for ", toTitleCase(dimnames(with_conf)[[3]][1])," Sensitivity Analysis")))
dev.off()
# print(levelplot(value, xlab = "Parameter", ylab = "Objective Function", col.regions = col,
#                 main = paste0("Portrait Plot for ", toTitleCase(dimnames(with_conf)[[3]][1])," Sensitivity Analysis")))
#
}
}
}
